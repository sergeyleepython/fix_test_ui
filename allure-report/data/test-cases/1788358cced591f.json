{
  "uid" : "1788358cced591f",
  "name" : "test_login_invalid[credentials0]",
  "fullName" : "tests.test_security#test_login_invalid[credentials0]",
  "historyId" : "b38bec7db8fc269a0268c4528e5f2295",
  "time" : {
    "start" : 1533658341522,
    "stop" : 1533658346503,
    "duration" : 4981
  },
  "description" : " Invalid login. ",
  "descriptionHtml" : "<p>Invalid login.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Калькулятор' not in 'Калькулятор'\n  'Калькулятор' is contained here:\n    Калькулятор",
  "statusTrace" : "browser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f311c518-04f1-4d3a-ba87-d1d4ac9a5366\")>, credentials = {'password': 'invalid_password', 'username': 'invalid_username'}\n\n    @pytest.allure.severity(pytest.allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize('credentials', [\n        {'username': 'invalid_username', 'password': 'invalid_password'},\n        {'username': '', 'password': ''}\n    ])\n    def test_login_invalid(browser, credentials):\n        \"\"\" Invalid login. \"\"\"\n        browser.get('http://rulkov.ru/qa/#/login')\n    \n        wait = WebDriverWait(browser, timeout)\n        username = wait.until(EC.presence_of_element_located((By.NAME, 'username')))\n        password = wait.until(EC.presence_of_element_located((By.NAME, 'password')))\n    \n        username.send_keys(credentials['username'])\n        password.send_keys(credentials['password'])\n    \n        browser.find_element_by_xpath(\"//button[@type='submit']\").click()\n    \n        time.sleep(3)\n    \n        allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot\", attachment_type=AttachmentType.PNG)\n    \n        # Shouldn't redirect to Addition page.\n>       assert \"Калькулятор\" not in browser.title\nE       AssertionError: assert 'Калькулятор' not in 'Калькулятор'\nE         'Калькулятор' is contained here:\nE           Калькулятор\n\ntests/test_security.py:36: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1533658338366,
      "stop" : 1533658341520,
      "duration" : 3154
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1533658158960,
      "stop" : 1533658158960,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1533658158959,
      "stop" : 1533658158959,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : " Invalid login. ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Калькулятор' not in 'Калькулятор'\n  'Калькулятор' is contained here:\n    Калькулятор",
    "statusTrace" : "browser = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f311c518-04f1-4d3a-ba87-d1d4ac9a5366\")>, credentials = {'password': 'invalid_password', 'username': 'invalid_username'}\n\n    @pytest.allure.severity(pytest.allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize('credentials', [\n        {'username': 'invalid_username', 'password': 'invalid_password'},\n        {'username': '', 'password': ''}\n    ])\n    def test_login_invalid(browser, credentials):\n        \"\"\" Invalid login. \"\"\"\n        browser.get('http://rulkov.ru/qa/#/login')\n    \n        wait = WebDriverWait(browser, timeout)\n        username = wait.until(EC.presence_of_element_located((By.NAME, 'username')))\n        password = wait.until(EC.presence_of_element_located((By.NAME, 'password')))\n    \n        username.send_keys(credentials['username'])\n        password.send_keys(credentials['password'])\n    \n        browser.find_element_by_xpath(\"//button[@type='submit']\").click()\n    \n        time.sleep(3)\n    \n        allure.attach(browser.get_screenshot_as_png(), name=\"Screenshot\", attachment_type=AttachmentType.PNG)\n    \n        # Shouldn't redirect to Addition page.\n>       assert \"Калькулятор\" not in browser.title\nE       AssertionError: assert 'Калькулятор' not in 'Калькулятор'\nE         'Калькулятор' is contained here:\nE           Калькулятор\n\ntests/test_security.py:36: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c157dbfb0ae51244",
      "name" : "Screenshot",
      "source" : "c157dbfb0ae51244.png",
      "type" : "image/png",
      "size" : 34582
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::close",
    "time" : {
      "start" : 1533658346544,
      "stop" : 1533658347154,
      "duration" : 610
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "host",
    "value" : "asus-UX32LN"
  }, {
    "name" : "thread",
    "value" : "21761-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_security"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "credentials",
    "value" : "{'username': 'invalid_username', 'password': 'invalid_password'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1788358cced591f.json",
  "parameterValues" : [ "{'username': 'invalid_username', 'password': 'invalid_password'}" ]
}